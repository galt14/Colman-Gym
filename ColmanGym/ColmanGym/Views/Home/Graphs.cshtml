
@{ ViewData["Title"] = "Graphs"; }
<div id="table">
    <br />
    <h3 class="headline">Statistics</h3>
    <aside>
        <h5>This page is for administrator only</h5>
    </aside>
    <div class="d-flex">
        <div class="container1" id="firstDataviz"></div>
        <div class="container2" id="secondDataviz"></div>
    </div>
    <!--First Graph -->
    <!-- Load d3.js -->
    <script src="https://d3js.org/d3.v4.js"></script>
    <script>
// set the dimensions and margins of the graph
            var margin = { top: 70, right: 30, bottom: 90, left: 60 },
                width = 500 - margin.left - margin.right,
                height = 500 - margin.top - margin.bottom;
            // append the svg object to the body of the page
            var svg = d3.select("#firstDataviz")
                .append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");
            // Parse the Data
            d3.csv("/graph_data/TrainbyCity.csv", function (data) {
                // sort the data
                data.sort(function (b, a) {
                    return a.train - b.train;
                });
                // X axis
                var x = d3.scaleBand()
                    .range([0, width])
                    .domain(data.map(function (d) { return d.City; }))
                    .padding(0.2);
                svg.append("g")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x))
                    .selectAll("text")
                    .attr("transform", "translate(-10,0)rotate(-22)")
                    .style("text-anchor", "end");
                // Add Y axis
                var y = d3.scaleLinear()
                    .domain([0, 10])
                    .range([height, 0]);
                svg.append("g")
                    .call(d3.axisLeft(y));
                // Bars
                svg.selectAll("mybar")
                    .data(data)
                    .enter()
                    .append("rect")
                    .attr("x", function (d) { return x(d.City); })
                    .attr("y", function (d) { return y(d.train); })
                    .attr("width", x.bandwidth())
                    .attr("height", function (d) { return height - y(d.train); })
                    .attr("fill", "#9de9de")
                //add x-axis label
                svg.append("text")
                    .attr("transform", "translate(" + (width / 2) + " ," + (height + margin.bottom - 5) + ")")
                    .style("text-anchor", "middle")
                    .text("City");
                //add y-axis label
                svg.append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 0 - margin.left)
                    .attr("x", 0 - (height / 2))
                    .attr("dy", "2em")
                    .style("font-size", "12px")
                    .style("text-anchor", "middle")
                    .text("Amount Of Meetings");
                // add title to the graph
                svg.append("text")
                    .attr("x", (width / 2))
                    .attr("y", 0 - (margin.top / 2))
                    .attr("text-anchor", "middle")
                    .style("font-size", "16px")
                    .style("text-decoration", "underline")
                    .text("Amount Of Train Meetings Per City");
            })</script>

    <!--Second Graph -->
    <script src="https://d3js.org/d3.v4.js"></script>
    <script>
// set the dimensions and margins of the graph
            var margin2 = { top: 70, right: 30, bottom: 70, left: 60 },
                width = 500 - margin2.left - margin2.right,
                height = 500 - margin2.top - margin2.bottom;
            // append the svg object to the body of the page
            var svg2 = d3.select("#secondDataviz")
                .append("svg")
                .attr("width", width + margin2.left + margin2.right)
                .attr("height", height + margin2.top + margin2.bottom)
                .append("g")
                .attr("transform", "translate(" + margin2.left + "," + margin2.top + ")");
            // Parse the Data
            d3.csv("/graph_data/CountMeetingbyType.csv", function (data) {
                // Add X axis
                var x2 = d3.scaleLinear()
                    .domain([0, 10])
                    .range([0, width]);
                svg2.append("g")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x2))
                    .selectAll("text")
                    .attr("transform", "translate(-10,0)rotate(-45)")
                    .style("text-anchor", "end");
                // Y axis
                var y2 = d3.scaleBand()
                    .domain(data.map(function (d) { return d.Training_type; }))
                    .range([0, height])
                    .padding(1);
                svg2.append("g")
                    .call(d3.axisLeft(y2))
                //lines
                svg2.selectAll("myline")
                    .data(data)
                    .enter()
                    .append("line")
                    .attr("x1", function (d) { return x2(d.AmountOfMeetings); })
                    .attr("x2", x2(0))
                    .attr("y1", function (d) { return y2(d.Training_type); })
                    .attr("y2", function (d) { return y2(d.Training_type); })
                    .attr("stroke", "black")
                // Circles
                svg2.selectAll("mycircle")
                    .data(data)
                    .enter()
                    .append("circle")
                    .attr("cx", function (d) { return x2(d.AmountOfMeetings); })
                    .attr("cy", function (d) { return y2(d.Training_type); })
                    .attr("r", "6")
                    .style("fill", "#9de9de")
                    .attr("stroke", "black")
                //add y-axis label
                svg2.append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 0 - margin2.left)
                    .attr("x", 0 - (height / 2))
                    .attr("dy", "2em")
                    .style("font-size", "12px")
                    .style("text-anchor", "middle");
                // add x-axis label
                svg2.append("text")
                    .attr("transform", "translate(" + (width / 2) + " ," + (height + margin.bottom - 15) + ")")
                    .style("text-anchor", "middle")
                // add title to the graph
                svg2.append("text")
                    .attr("x", (width / 2))
                    .attr("y", 0 - (margin.top / 2))
                    .attr("text-anchor", "middle")
                    .style("font-size", "16px")
                    .style("text-decoration", "underline")
                    .text("Amount Of Meetings By Training Type");
            })</script>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>